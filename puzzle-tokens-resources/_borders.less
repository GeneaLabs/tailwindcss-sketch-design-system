@import "./_tailwind-variables.less";

@styles: {
    Solid: solid;
    // Dashed: dashed;
    // Dotted: dotted;
    // Double: double;
};

@widths:
    1,
    2,
    4,
    8
;

@colors: {
    Gray: gray;
    Red: red;
    Orange: orange;
    Yellow: yellow;
    Green: green;
    Teal: teal;
    Blue: blue;
    Indigo: indigo;
    Purple: purple;
    Pink: pink;
};

@variants:
    100,
    200,
    300,
    400,
    500,
    600,
    700,
    800,
    900
;

.Borders .None {
    border-width: 0;
    border-color: transparent;
}

each(@widths, .(@width) {
    each(@colors, #(@colorValue, @colorKey) {
        each(@variants, .(@variant) {
            .Borders .Solid .@{width} .@{colorKey} .@{variant} {
                border-width: unit(@width, px);
                border-color: ~"@{colors-@{colorValue}-@{variant}}";
                border-position: inside;
            }
    
            // @outerWidth: ((@width - (@width / (@width / 2))) / (@width / 4));
            // @gapWidth: (@outerWidth + (@width / 4));
            // @innerWidth: (@outerWidth + @gapWidth);
            // .Borders .Double .@{width} .@{colorKey} .@{variant} {
            //     border-width: unit(@innerWidth, px);
            //     border-color: ~"@{colors-@{colorValue}-@{variant}}";
            //     border-position: inside;
            // }
            // .Borders .Double .@{width} .@{colorKey} .@{variant} {
            //     border-width: unit(@gapWidth, px);
            //     border-color: white;
            //     border-position: inside;
            // }
            // .Borders .Double .@{width} .@{colorKey} .@{variant} {
            //     border-width: unit(@outerWidth, px);
            //     border-color: ~"@{colors-@{colorValue}-@{variant}}";
            //     border-position: inside;
            // }
        });
    });
});
